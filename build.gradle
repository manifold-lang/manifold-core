apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'checkstyle'
apply plugin: 'application'
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "org.manifold"
// name = "manifold-core"
version = '0.8.1-SNAPSHOT'

jar {
  manifest {
    attributes 'Implementation-Title': 'Manifold Core', 'Implementation-Version': version
  }
}

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile 'com.google.code.gson:gson:2.2.4'
  compile 'com.google.guava:guava:17.0'
  testCompile 'junit:junit:4.11'
  compile 'log4j:log4j:1.2.16'
  compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
}

buildscript {
  repositories {
    mavenCentral()
    maven {
        name 'JFrog OSS snapshot repo'
        url  'https://oss.jfrog.org/oss-snapshot-local/'
    }
    jcenter()
}

  dependencies {
    classpath 'org.ajoberstar:gradle-jacoco:0.2.0'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:1.0.2'
  }
}

apply plugin: 'jacoco'

jacoco {
  toolVersion = "0.7.1.201405082137"
  reportsDir = file("$buildDir/reports/jacoco")
}

test {
  copy {
    from 'src/test/java/org/manifold/compiler/serialization/data'
    into "$buildDir/classes/test/org/manifold/compiler/serialization/data"
  }
  testLogging.showStandardStreams = true
  jacoco {
    append = false
    destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    classDumpFile = file("$buildDir/jacoco/classpathdumps")
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true
    csv.enabled = false
    html.destination = "${buildDir}/reports/jacoco"
  }
}

check.dependsOn(jacocoTestReport)

checkstyle {
  configFile = new File(rootDir, "checkstyle.xml")
  ignoreFailures = false
  showViolations = true
  toolVersion = "5.9"
}

task jenkinsTest {
  inputs.files test.outputs.files
  doLast {
    def timestamp = System.currentTimeMillis()
    testResultsDir.eachFile { it.lastModified = timestamp }
  }
}

build.dependsOn(jenkinsTest)

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "file://localhost/var/www/releases")
    }
  }
}
